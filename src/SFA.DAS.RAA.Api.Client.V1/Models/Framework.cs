// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SFA.DAS.RAA.Api.Client.V1.Models
{
    using System.Linq;

    /// <summary>
    /// Framework instance
    /// </summary>
    public partial class Framework
    {
        /// <summary>
        /// Initializes a new instance of the Framework class.
        /// </summary>
        public Framework() { }

        /// <summary>
        /// Initializes a new instance of the Framework class.
        /// </summary>
        /// <param name="id">Framework's identifier</param>
        /// <param name="codeName">Framework's codename</param>
        /// <param name="shortName">Framework's shortname</param>
        /// <param name="fullName">Framework's fullname</param>
        /// <param name="status">Framework's status. Possible values include:
        /// 'Active', 'Ceased', 'PendingClosure'</param>
        /// <param name="parentCategoryCodeName">Framework's ParentCategory
        /// Code name</param>
        public Framework(int id, string codeName, string shortName, string fullName, string status, string parentCategoryCodeName = default(string))
        {
            Id = id;
            CodeName = codeName;
            ShortName = shortName;
            FullName = fullName;
            ParentCategoryCodeName = parentCategoryCodeName;
            Status = status;
        }

        /// <summary>
        /// Gets or sets framework's identifier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets framework's codename
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "CodeName")]
        public string CodeName { get; set; }

        /// <summary>
        /// Gets or sets framework's shortname
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ShortName")]
        public string ShortName { get; set; }

        /// <summary>
        /// Gets or sets framework's fullname
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "FullName")]
        public string FullName { get; set; }

        /// <summary>
        /// Gets or sets framework's ParentCategory Code name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ParentCategoryCodeName")]
        public string ParentCategoryCodeName { get; set; }

        /// <summary>
        /// Gets or sets framework's status. Possible values include:
        /// 'Active', 'Ceased', 'PendingClosure'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CodeName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "CodeName");
            }
            if (ShortName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ShortName");
            }
            if (FullName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "FullName");
            }
            if (Status == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Status");
            }
        }
    }
}
