// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SFA.DAS.RAA.Api.Client.V1.Models
{
    using System.Linq;

    /// <summary>
    /// SFA Approved standard postal address entity
    /// </summary>
    public partial class PostalAddress
    {
        /// <summary>
        /// Initializes a new instance of the PostalAddress class.
        /// </summary>
        public PostalAddress() { }

        /// <summary>
        /// Initializes a new instance of the PostalAddress class.
        /// </summary>
        /// <param name="addressLine1">The first line of the address. Usually
        /// house number or name</param>
        /// <param name="town">The town or city the address belongs to</param>
        /// <param name="postcode">The postcode</param>
        /// <param name="countyId">The primary identifier for the county of
        /// the address</param>
        /// <param name="county">The name of the county</param>
        /// <param name="localAuthorityId">The primary identifier for the
        /// local authority the address is part of</param>
        /// <param name="localAuthorityCodeName">The secondary code identifier
        /// for the local authority the address is part of</param>
        /// <param name="localAuthority">The local authority's name</param>
        /// <param name="geoPoint">The global geopoint for the address</param>
        /// <param name="postalAddressId">The primary id of this address if
        /// specified by the validating entity</param>
        /// <param name="addressLine2">The second line of the address. Usually
        /// street name</param>
        /// <param name="addressLine3">The third line of the address</param>
        /// <param name="addressLine4">The fourth line of the address</param>
        /// <param name="addressLine5">The fifth line of the address</param>
        /// <param name="validationSourceCode">AKA ValidationSourceKeyName.
        /// As at 13/01/2015, the SFA Data Standard for Postal Addresses list
        /// valid validating bodies as:
        /// 1. Royal Mail PAF file
        /// 2. GeoPlace data
        /// 3. PCA product (uses a PAF file source)</param>
        /// <param name="validationSourceKeyValue">For PAF, this is the Unique
        /// Delivery Point Reference Number (UDPRN)
        /// For GeoPlace, this is the Unique Property ReferenceNumber (UPRN)
        /// PostCode anywhere uses PAF data, so this is the UDPRN.</param>
        /// <param name="dateValidated">The date the address was
        /// validated</param>
        public PostalAddress(string addressLine1, string town, string postcode, int countyId, string county, int localAuthorityId, string localAuthorityCodeName, string localAuthority, GeoPoint geoPoint, int? postalAddressId = default(int?), string addressLine2 = default(string), string addressLine3 = default(string), string addressLine4 = default(string), string addressLine5 = default(string), string validationSourceCode = default(string), string validationSourceKeyValue = default(string), System.DateTime? dateValidated = default(System.DateTime?))
        {
            PostalAddressId = postalAddressId;
            AddressLine1 = addressLine1;
            AddressLine2 = addressLine2;
            AddressLine3 = addressLine3;
            AddressLine4 = addressLine4;
            AddressLine5 = addressLine5;
            Town = town;
            Postcode = postcode;
            ValidationSourceCode = validationSourceCode;
            ValidationSourceKeyValue = validationSourceKeyValue;
            DateValidated = dateValidated;
            CountyId = countyId;
            County = county;
            LocalAuthorityId = localAuthorityId;
            LocalAuthorityCodeName = localAuthorityCodeName;
            LocalAuthority = localAuthority;
            GeoPoint = geoPoint;
        }

        /// <summary>
        /// Gets or sets the primary id of this address if specified by the
        /// validating entity
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "PostalAddressId")]
        public int? PostalAddressId { get; set; }

        /// <summary>
        /// Gets or sets the first line of the address. Usually house number
        /// or name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AddressLine1")]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// Gets or sets the second line of the address. Usually street name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AddressLine2")]
        public string AddressLine2 { get; set; }

        /// <summary>
        /// Gets or sets the third line of the address
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AddressLine3")]
        public string AddressLine3 { get; set; }

        /// <summary>
        /// Gets or sets the fourth line of the address
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AddressLine4")]
        public string AddressLine4 { get; set; }

        /// <summary>
        /// Gets or sets the fifth line of the address
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AddressLine5")]
        public string AddressLine5 { get; set; }

        /// <summary>
        /// Gets or sets the town or city the address belongs to
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Town")]
        public string Town { get; set; }

        /// <summary>
        /// Gets or sets the postcode
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Postcode")]
        public string Postcode { get; set; }

        /// <summary>
        /// Gets or sets AKA ValidationSourceKeyName.
        /// As at 13/01/2015, the SFA Data Standard for Postal Addresses list
        /// valid validating bodies as:
        /// 1. Royal Mail PAF file
        /// 2. GeoPlace data
        /// 3. PCA product (uses a PAF file source)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ValidationSourceCode")]
        public string ValidationSourceCode { get; set; }

        /// <summary>
        /// Gets or sets for PAF, this is the Unique Delivery Point Reference
        /// Number (UDPRN)
        /// For GeoPlace, this is the Unique Property ReferenceNumber (UPRN)
        /// PostCode anywhere uses PAF data, so this is the UDPRN.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ValidationSourceKeyValue")]
        public string ValidationSourceKeyValue { get; set; }

        /// <summary>
        /// Gets or sets the date the address was validated
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DateValidated")]
        public System.DateTime? DateValidated { get; set; }

        /// <summary>
        /// Gets or sets the primary identifier for the county of the address
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "CountyId")]
        public int CountyId { get; set; }

        /// <summary>
        /// Gets or sets the name of the county
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "County")]
        public string County { get; set; }

        /// <summary>
        /// Gets or sets the primary identifier for the local authority the
        /// address is part of
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LocalAuthorityId")]
        public int LocalAuthorityId { get; set; }

        /// <summary>
        /// Gets or sets the secondary code identifier for the local authority
        /// the address is part of
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LocalAuthorityCodeName")]
        public string LocalAuthorityCodeName { get; set; }

        /// <summary>
        /// Gets or sets the local authority's name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LocalAuthority")]
        public string LocalAuthority { get; set; }

        /// <summary>
        /// Gets or sets the global geopoint for the address
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "GeoPoint")]
        public GeoPoint GeoPoint { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AddressLine1 == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AddressLine1");
            }
            if (Town == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Town");
            }
            if (Postcode == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Postcode");
            }
            if (County == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "County");
            }
            if (LocalAuthorityCodeName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "LocalAuthorityCodeName");
            }
            if (LocalAuthority == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "LocalAuthority");
            }
            if (GeoPoint == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "GeoPoint");
            }
            if (this.GeoPoint != null)
            {
                this.GeoPoint.Validate();
            }
        }
    }
}
