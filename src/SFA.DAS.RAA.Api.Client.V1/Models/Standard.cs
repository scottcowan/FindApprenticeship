// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SFA.DAS.RAA.Api.Client.V1.Models
{
    /// <summary>
    /// The information related to a Standard
    /// </summary>
    public class Standard
    {
        /// <summary>
        /// Initializes a new instance of the Standard class.
        /// </summary>
        public Standard() { }

        /// <summary>
        /// Standard class
        /// </summary>
        /// <param name="id"></param>
        /// <param name="name"></param>
        /// <param name="apprenticeshipSectorId"></param>
        /// <param name="apprenticeshipLevel"></param>
        /// <param name="status"></param>
        /// <param name="larsCode"></param>
        public Standard(int id, string name, int apprenticeshipSectorId, string apprenticeshipLevel, string status, int larsCode)
        {
            Id = id;
            Name = name;
            ApprenticeshipSectorId = apprenticeshipSectorId;
            ApprenticeshipLevel = apprenticeshipLevel;
            Status = status;
            LarsCode = larsCode;
        }

        /// <summary>
        /// Gets or sets the standard's primary identifier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the standard's name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets standard's the ApprenticeshipSectorId 
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ApprenticeshipSectorId")]
        public int ApprenticeshipSectorId { get; set; }

        /// <summary>
        /// Gets or sets the standard's ApprenticeshipLevel 
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ApprenticeshipLevel")]
        public string ApprenticeshipLevel { get; set; }

        /// <summary>
        /// Gets or sets the standard's Status  
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the standard's LarsCode  
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LarsCode")]
        public int LarsCode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (ApprenticeshipLevel == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ApprenticeshipLevel");
            }
            if (Status == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Status");
            }
        }
    }
}
