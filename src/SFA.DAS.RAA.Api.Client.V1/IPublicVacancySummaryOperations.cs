// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SFA.DAS.RAA.Api.Client.V1
{
    using Models;

    /// <summary>
    /// PublicVacancySummaryOperations operations.
    /// </summary>
    public partial interface IPublicVacancySummaryOperations
    {
        /// <summary>
        /// Endpoint to retrieve a page of Live vacancy summaries. Note that
        /// this endpoint will only return live vacancies and will return a
        /// more cut down vacancy object.
        /// This includes only the public facing vacancy data. If you need the
        /// full vacancy information for a vacancy you have access too, use
        /// the non public end point.
        /// </summary>
        /// <param name='page'>
        /// The page of vacancies required. If this is less than 1 or greater
        /// than the total number of pages, it will be set to 1 or the last
        /// page respectively
        /// </param>
        /// <param name='pageSize'>
        /// The number of vacancies to return per page up to a maximum of 250.
        /// Values larger than this will be set to 250
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<PublicVacancySummariesPage>> GetAllLiveVacancySummariesWithHttpMessagesAsync(int? page = default(int?), int? pageSize = default(int?), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
