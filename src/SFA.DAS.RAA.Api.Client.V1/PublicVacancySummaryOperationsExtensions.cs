// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SFA.DAS.RAA.Api.Client.V1
{
    using System.Threading.Tasks;
   using Models;

    /// <summary>
    /// Extension methods for PublicVacancySummaryOperations.
    /// </summary>
    public static partial class PublicVacancySummaryOperationsExtensions
    {
            /// <summary>
            /// Endpoint to retrieve a page of Live vacancy summaries. Note that this
            /// endpoint will only return live vacancies and will return a more cut down
            /// vacancy object.
            /// This includes only the public facing vacancy data. If you need the full
            /// vacancy information for a vacancy you have access too, use the non public
            /// end point.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='page'>
            /// The page of vacancies required. If this is less than 1 or greater than the
            /// total number of pages, it will be set to 1 or the last page respectively
            /// </param>
            /// <param name='pageSize'>
            /// The number of vacancies to return per page up to a maximum of 250. Values
            /// larger than this will be set to 250
            /// </param>
            public static PublicVacancySummariesPage GetAllLiveVacancySummaries(this IPublicVacancySummaryOperations operations, int? page = default(int?), int? pageSize = default(int?))
            {
                return System.Threading.Tasks.Task.Factory.StartNew(s => ((IPublicVacancySummaryOperations)s).GetAllLiveVacancySummariesAsync(page, pageSize), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None, System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Endpoint to retrieve a page of Live vacancy summaries. Note that this
            /// endpoint will only return live vacancies and will return a more cut down
            /// vacancy object.
            /// This includes only the public facing vacancy data. If you need the full
            /// vacancy information for a vacancy you have access too, use the non public
            /// end point.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='page'>
            /// The page of vacancies required. If this is less than 1 or greater than the
            /// total number of pages, it will be set to 1 or the last page respectively
            /// </param>
            /// <param name='pageSize'>
            /// The number of vacancies to return per page up to a maximum of 250. Values
            /// larger than this will be set to 250
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<PublicVacancySummariesPage> GetAllLiveVacancySummariesAsync(this IPublicVacancySummaryOperations operations, int? page = default(int?), int? pageSize = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetAllLiveVacancySummariesWithHttpMessagesAsync(page, pageSize, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
