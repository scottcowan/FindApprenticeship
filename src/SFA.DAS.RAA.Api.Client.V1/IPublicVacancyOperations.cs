// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SFA.DAS.RAA.Api.Client.V1
{
    using Models;

    /// <summary>
    /// PublicVacancyOperations operations.
    /// </summary>
    public partial interface IPublicVacancyOperations
    {
        /// <summary>
        /// Endpoint to retrieve a Live vacancy. Note that this endpoint will
        /// only return live vacancies and will return a more cut down
        /// vacancy object.
        /// This includes only the public facing vacancy data. If you need the
        /// full vacancy information for a vacancy you have access too, use
        /// the non public end point.
        /// </summary>
        /// <param name='id'>
        /// The primary identifier for the vacancy
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<PublicVacancy>> GetByIdWithHttpMessagesAsync(int id, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Endpoint to retrieve a Live vacancy. Note that this endpoint will
        /// only return live vacancies and will return a more cut down
        /// vacancy object.
        /// This includes only the public facing vacancy data. If you need the
        /// full vacancy information for a vacancy you have access too, use
        /// the non public end point.
        /// </summary>
        /// <param name='reference'>
        /// The secondary reference for the vacancy. Can be either the
        /// numerical part of the vacancy reference e.g. 123456 or the full
        /// version e.g. VAC000123456
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<PublicVacancy>> GetByReferenceNumberWithHttpMessagesAsync(string reference, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Endpoint to retrieve a Live vacancy. Note that this endpoint will
        /// only return live vacancies and will return a more cut down
        /// vacancy object.
        /// This includes only the public facing vacancy data. If you need the
        /// full vacancy information for a vacancy you have access too, use
        /// the non public end point.
        /// </summary>
        /// <param name='guid'>
        /// The secondary GUID identifier for the vacancy
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<PublicVacancy>> GetByGuidWithHttpMessagesAsync(System.Guid guid, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
