// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SFA.DAS.RAA.Api.Client.V1
{
    using System.Threading.Tasks;
   using Models;

    /// <summary>
    /// Extension methods for PublicVacancyOperations.
    /// </summary>
    public static partial class PublicVacancyOperationsExtensions
    {
            /// <summary>
            /// Endpoint to retrieve a Live vacancy. Note that this endpoint will only
            /// return live vacancies and will return a more cut down vacancy object.
            /// This includes only the public facing vacancy data. If you need the full
            /// vacancy information for a vacancy you have access too, use the non public
            /// end point.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The primary identifier for the vacancy
            /// </param>
            public static PublicVacancy GetById(this IPublicVacancyOperations operations, int id)
            {
                return System.Threading.Tasks.Task.Factory.StartNew(s => ((IPublicVacancyOperations)s).GetByIdAsync(id), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None, System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Endpoint to retrieve a Live vacancy. Note that this endpoint will only
            /// return live vacancies and will return a more cut down vacancy object.
            /// This includes only the public facing vacancy data. If you need the full
            /// vacancy information for a vacancy you have access too, use the non public
            /// end point.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The primary identifier for the vacancy
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<PublicVacancy> GetByIdAsync(this IPublicVacancyOperations operations, int id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Endpoint to retrieve a Live vacancy. Note that this endpoint will only
            /// return live vacancies and will return a more cut down vacancy object.
            /// This includes only the public facing vacancy data. If you need the full
            /// vacancy information for a vacancy you have access too, use the non public
            /// end point.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reference'>
            /// The secondary reference for the vacancy. Can be either the numerical part
            /// of the vacancy reference e.g. 123456 or the full version e.g. VAC000123456
            /// </param>
            public static PublicVacancy GetByReferenceNumber(this IPublicVacancyOperations operations, string reference)
            {
                return System.Threading.Tasks.Task.Factory.StartNew(s => ((IPublicVacancyOperations)s).GetByReferenceNumberAsync(reference), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None, System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Endpoint to retrieve a Live vacancy. Note that this endpoint will only
            /// return live vacancies and will return a more cut down vacancy object.
            /// This includes only the public facing vacancy data. If you need the full
            /// vacancy information for a vacancy you have access too, use the non public
            /// end point.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reference'>
            /// The secondary reference for the vacancy. Can be either the numerical part
            /// of the vacancy reference e.g. 123456 or the full version e.g. VAC000123456
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<PublicVacancy> GetByReferenceNumberAsync(this IPublicVacancyOperations operations, string reference, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetByReferenceNumberWithHttpMessagesAsync(reference, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Endpoint to retrieve a Live vacancy. Note that this endpoint will only
            /// return live vacancies and will return a more cut down vacancy object.
            /// This includes only the public facing vacancy data. If you need the full
            /// vacancy information for a vacancy you have access too, use the non public
            /// end point.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='guid'>
            /// The secondary GUID identifier for the vacancy
            /// </param>
            public static PublicVacancy GetByGuid(this IPublicVacancyOperations operations, System.Guid guid)
            {
                return System.Threading.Tasks.Task.Factory.StartNew(s => ((IPublicVacancyOperations)s).GetByGuidAsync(guid), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None, System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Endpoint to retrieve a Live vacancy. Note that this endpoint will only
            /// return live vacancies and will return a more cut down vacancy object.
            /// This includes only the public facing vacancy data. If you need the full
            /// vacancy information for a vacancy you have access too, use the non public
            /// end point.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='guid'>
            /// The secondary GUID identifier for the vacancy
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<PublicVacancy> GetByGuidAsync(this IPublicVacancyOperations operations, System.Guid guid, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetByGuidWithHttpMessagesAsync(guid, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
