@using System.Web.Mvc.Html
@using SFA.Apprenticeships.Domain.Raa.Interfaces.Repositories.Models
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Application
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@using SFA.Apprenticeships.Web.Recruit.Constants
@model BulkDeclineCandidatesViewModel

@{
    ViewBag.Title = "Recruit an Apprentice - Bulk decline candidates";
}
@Html.Partial("ValidationSummary", ViewData.ModelState)
@using (Html.BeginRouteForm(RecruitmentRouteNames.BulkDeclineCandidates, FormMethod.Post, new { id = "bulk-decline-candidates-form" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.VacancyApplicationsSearch.VacancyReferenceNumber)
    <input type="hidden" name="@Html.NameFor(m => m.VacancyApplicationsSearch.FilterType)" value="@Model.VacancyApplicationsSearch.FilterType" />
    <input type="hidden" name="@Html.NameFor(m => m.VacancyApplicationsSearch.OrderByField)" value="@Model.VacancyApplicationsSearch.OrderByField" />
    <input type="hidden" name="@Html.NameFor(m => m.VacancyApplicationsSearch.Order)" value="@Model.VacancyApplicationsSearch.Order" />

    foreach (var selectedApplicationId in Model.SelectedApplicationIds.Where(aid => Model.ApplicationSummaries.All(a => a.ApplicationId != aid)))
    {
        <input type="hidden" name="@Html.NameFor(m => m.SelectedApplicationIds)" value="@selectedApplicationId" />
    }

    <div class="grid-row">
        <div class="column-two-thirds">
            <h1 id="heading" class="heading-xlarge">Select the candidates you would like to make unsucessful</h1>
        </div>

        <div class="column-one-third">
            <div class="sfa-inset sfa-inset-light-grey sfa-xlarge-top-margin sfa-inset sfa-inset-light-grey govuk-related-items">
                <h2 class="heading-medium">
                    @Model.Title
                    <span class="heading-secondary ">@Model.EmployerName</span>
                </h2>
                <p class="font-xsmall">
                    @Html.RouteLink("See full vacancy details", RecruitmentRouteNames.PreviewVacancy, new { vacancyReferenceNumber = Model.VacancyApplicationsSearch.VacancyReferenceNumber, mode = VacancyViewModel.BulkUploadMode }, new { @class = "account-link" })
                </p>
            </div>
        </div>
    </div>

    <div class="grid-row sfa-filter-table-header sfa-section-border-bottom" id="applicationsSection">
        <div class="column-half">
            @{
                var filterType = Model.VacancyApplicationsSearch.FilterType;
            }
            <h2 class="heading-large sfa-no-margins">
                Candidates
                @if (filterType != VacancyApplicationsFilterTypes.All)
                {
                    <button class="vacancy-filter sfa-show-all" name="BulkSearchApplicationsAction" value="BulkFilterApplicationsAll">Show all</button>
                }
            </h2>
        </div>
    </div>

  
    <div class="sfa-filter-container sfa-section-border-bottom">
        <div class="grid-row">
            <div class="column-half">
                <div class="data sfa-data">
                    @if (filterType == VacancyApplicationsFilterTypes.New)
                    {
                        <span class="data-item bold-xlarge">@Model.NewApplicationsCount</span>
                        <span class="data-item bold-xsmall">New</span>
                    }
                    else
                    {
                            <a href="#1" class="vacancy-filter" name="BulkSearchApplicationsAction" value="BulkFilterApplicationsNew">
                                <span class="data-item bold-xlarge">@Model.NewApplicationsCount</span>
                                <span class="data-item bold-xsmall">New</span>
                            </a>
                            }
                </div>
            </div>
            <div class="column-half">
                <div class="data sfa-data">
                    @if (filterType == VacancyApplicationsFilterTypes.InProgress)
                    {
                        <span class="data-item bold-xlarge">@Model.InProgressApplicationsCount</span>
                        <span class="data-item bold-xsmall">In progress</span>
                    }
                    else
                    {
                        <a href="#1" class="vacancy-filter" name="BulkSearchApplicationsAction" value="BulkFilterApplicationsInProgress">
                            <span class="data-item bold-xlarge">@Model.InProgressApplicationsCount</span>
                            <span class="data-item bold-xsmall">In progress</span>
                        </a>
                    }
                </div>
            </div>
         </div>
    </div>

    <div class="grid-row sfa-xlarge-bottom-margin">
        <div class="column-full">
            <table class="sfa-table" id="applicationTable">
                <colgroup>
                    <col>
                    <col>
                    <col>
                    <col>
                    <col>
                    <col>
                    <col>
                </colgroup>
                <thead>
                    <tr>
                        <th>
                            @{
                                var surnameSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldLastName ?
                                            Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";

                                var surnameSortOrder = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldLastName ? Order.Descending : Order.Ascending;
                            }
                            <a href="@Url.RouteUrl(RecruitmentRouteNames.BulkDeclineCandidatesSearch, new VacancyApplicationsSearchViewModel(Model.VacancyApplicationsSearch, VacancyApplicationsSearchViewModel.OrderByFieldLastName, surnameSortOrder).RouteValues)" class="vacancy-order" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsLastName">
                                Surname<i class="fa sfa-icon-right @surnameSortClass" aria-hidden="true"></i>
                            </a>
                        </th>

                        <th>
                            @{
                                var firstNameSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldFirstName ?
                                    Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";

                                var firstNameSortOrder = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldFirstName ? Order.Descending : Order.Ascending;
                            }
                            <a href="@Url.RouteUrl(RecruitmentRouteNames.BulkDeclineCandidatesSearch, new VacancyApplicationsSearchViewModel(Model.VacancyApplicationsSearch, VacancyApplicationsSearchViewModel.OrderByFieldFirstName, firstNameSortOrder).RouteValues)" class="vacancy-order" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsFirstName">
                                First name<i class="fa sfa-icon-right @firstNameSortClass" aria-hidden="true"></i>
                            </a>
                        </th>
                        <th>
                            Applicant ID
                        </th>
                        <th>
                            @{
                                var managerNotesSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldManagerNotes ?
                                    Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";

                                var managerNotesSortOrder = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldManagerNotes ? Order.Descending : Order.Ascending;
                            }
                            <a href="@Url.RouteUrl(RecruitmentRouteNames.BulkDeclineCandidatesSearch, new VacancyApplicationsSearchViewModel(Model.VacancyApplicationsSearch, VacancyApplicationsSearchViewModel.OrderByFieldManagerNotes, managerNotesSortOrder).RouteValues)" class="vacancy-order" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsManagerNotes">
                                Vacancy manager notes<i class="fa sfa-icon-right @managerNotesSortClass" aria-hidden="true"></i>
                            </a>
                        </th>

                        <th>
                            @{
                                var submittedSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldSubmitted ?
                                    Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";

                                var submittedSortOrder = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldSubmitted ? Order.Descending : Order.Ascending;
                            }
                            <a href="@Url.RouteUrl(RecruitmentRouteNames.BulkDeclineCandidatesSearch, new VacancyApplicationsSearchViewModel(Model.VacancyApplicationsSearch, VacancyApplicationsSearchViewModel.OrderByFieldSubmitted, submittedSortOrder).RouteValues)" class="vacancy-order" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsSubmitted">
                                Submitted<i class="fa sfa-icon-right @submittedSortClass" aria-hidden="true"></i>
                            </a>
                        </th>
                        <th>
                            @{
                                var statusSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldStatus ?
                                    Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";

                                var statusSortOrder = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldStatus ? Order.Descending : Order.Ascending;
                            }
                            <a href="@Url.RouteUrl(RecruitmentRouteNames.BulkDeclineCandidatesSearch, new VacancyApplicationsSearchViewModel(Model.VacancyApplicationsSearch, VacancyApplicationsSearchViewModel.OrderByFieldStatus, statusSortOrder).RouteValues)" class="vacancy-order" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsStatus">
                                Status<i class="fa sfa-icon-right @statusSortClass" aria-hidden="true"></i>
                            </a>
                        </th>
                        <th>

                            <input type="checkbox" id="toggleAll" />
                            <label for="toggleAll">Select All</label>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var applicationSummary in Model.ApplicationSummaries)
                    {
                        <tr class="applicant">
                            <td>
                                <h4 class="applicant-name">@applicationSummary.LastName</h4>
                            </td>
                            <td>
                                <h4 class="applicant-name">@applicationSummary.FirstName</h4>
                            </td>
                            <td>
                                @applicationSummary.ApplicantID
                            </td>
                            <td>
                                @{
                                    var notes = applicationSummary.Notes;
                                    if (notes != null && notes.Length > 20)
                                    {
                                        notes = notes.Substring(0, 20) + "...";
                                    }
                                }
                                @notes
                            </td>
                            <td>@Html.DisplayFor(m => applicationSummary.DateApplied)</td>
                            <td>
                                @Html.Partial("_applicationStatus", applicationSummary.Status)
                            </td>
                            <td>
                                @{
                                    var selected = Model.SelectedApplicationIds.Contains(applicationSummary.ApplicationId) ? "checked" : string.Empty;
                                }
                                <input type="checkbox" name="@Html.NameFor(m => m.SelectedApplicationIds)" value="@applicationSummary.ApplicationId" @selected />
                            </td>
                        </tr>
                                    }
                </tbody>
            </table>
        </div>
    </div>


<div class="form-group inline sfa-xlarge-top-margin">
    <button type="submit" class="button" name="ConfirmBulkDeclineCandidatesAction" value="ConfirmBulkDeclineCandidates">Confirm and continue</button>
    <a id="dashboardLink" class="button sfa-button-secondary" href="@Url.RouteUrl(RecruitmentRouteNames.VacancyApplications, new {vacancyReferenceNumber = Model.VacancyApplicationsSearch.VacancyReferenceNumber})">Cancel</a>
</div>
                                                }

@section scripts
{
    <script>
        $("#toggleAll").change(function () {  //"select all" change
            var status = this.checked; // "select all" checked status
            $('input:checkbox').each(function () { //iterate all listed checkbox items
                this.checked = status; //change ".checkbox" checked status
            });
        });

        $('input:checkbox').change(function () { //".checkbox" change
            //uncheck "select all", if one of the listed checkbox item is unchecked
            if (this.checked == false) { //if this item is unchecked
                $("#toggleAll")[0].checked = false; //change "select all" checked status to false
            }

            //check "select all" if all checkbox items are checked
            if (($('input:checkbox:checked').length + 1) == $('input:checkbox').length) {
                $("#toggleAll")[0].checked = true; //change "select all" checked status to true
            }
        });
    </script>
}
