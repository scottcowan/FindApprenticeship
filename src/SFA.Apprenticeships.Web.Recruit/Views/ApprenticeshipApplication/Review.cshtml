@using System.Web.Mvc.Html
@using SFA.Apprenticeships.Domain.Entities.Applications
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Application
@using SFA.Apprenticeships.Web.Recruit.Constants

@model SFA.Apprenticeships.Web.Raa.Common.ViewModels.Application.Apprenticeship.ApprenticeshipApplicationViewModel

@{
    ViewBag.Title = "Recruit an Apprentice - Review application";
}

@using (Html.BeginRouteForm(RecruitmentRouteNames.ReviewApprenticeshipApplication, FormMethod.Post, new { id = "review-apprenticeship-application-form" }))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    @Html.HiddenFor(m => m.ApplicationSelection.ApplicationId)
    @Html.HiddenFor(m => m.ApplicationSelection.VacancyReferenceNumber)
    @Html.HiddenFor(m => m.ApplicationSelection.FilterType)
    @Html.HiddenFor(m => m.ApplicationSelection.PageSize)

    var currentStatus = "&nbsp;(current status)";

    if (Model.Status == ApplicationStatuses.Successful || Model.Status == ApplicationStatuses.Unsuccessful)
    {
        var decision = Model.Status == ApplicationStatuses.Successful ? "successful" : "unsuccessful";
        var decisionDateTime = Model.Status == ApplicationStatuses.Successful ? Model.SuccessfulDateTime : Model.UnsuccessfulDateTime;


        <div class="grid-row">
            <div class="column-two-thirds">
                <div class="info-summary" role="group" aria-labelledby="info-summary" tabindex="-1">

                    <p id="info-summary">
                        This candidate was made @decision
                        @if (decisionDateTime.HasValue)
                        {
                            <span>on @Html.DisplayFor(m => decisionDateTime.Value)</span>
                        }
                    </p>
                    <p>
                        @Html.RouteLink("Return to vacancy applications", RecruitmentRouteNames.VacancyApplications, new { Model.Vacancy.VacancyReferenceNumber })
                    </p>
                </div>
            </div>
        </div>
    }

    <div class="grid-row">
        <div class="column-two-thirds">
            <h1 class="heading-xlarge">
                @Model.Vacancy.Title
                <span class="heading-secondary">@Model.Vacancy.EmployerName</span>
            </h1>
        </div>

        <div class="column-one-third sfa-xlarge-top-margin sfa-align-right">
            <div class="hide-nojs">
                <a class="print-trigger" href=""><i class="fa fa-print"></i>Print this page</a>
            </div>
        </div>
    </div>

    <div class="grid-row">
        <div class="column-two-thirds">
            @Html.DisplayFor(m => m.ApplicantDetails, ApplicantDetailsViewModel.PartialView)

        @Html.DisplayFor(m => m.AboutYou, AboutYouViewModel.PartialView)
        @Html.DisplayFor(m => m.Education, EducationViewModel.PartialView)
        @Html.DisplayFor(m => m.Qualifications, QualificationViewModel.PartialView)
        @Html.DisplayFor(m => m.WorkExperience, WorkExperienceViewModel.PartialView)
        @Html.DisplayFor(m => m.TrainingCourses, TrainingCourseViewModel.PartialView)

        <h2 class="heading-large">Answers to employer questions</h2>
        @Html.DisplayFor(m => m, "Application/EmployerQuestionAnswers")
        @Html.DisplayFor(m => m, "Application/MonitoringInformation")
        <hr/>

        @if (Model.Status == ApplicationStatuses.Successful || Model.Status == ApplicationStatuses.Unsuccessful)
        {
        var notes = string.IsNullOrWhiteSpace(Model.Notes) ?
        "There are no notes for this candidate's application" :
        Model.Notes;

        <h2 class="heading-large">Vacancy manager notes</h2>
        <p>@notes</p>
        <hr />
            if (User.IsInRole(SFA.Apprenticeships.Domain.Entities.Raa.Roles.Admin))
            {
                <div class="form-group sfa-xlarge-top-margin">
                    <button type="submit" class="button" name="Review" value="ReviewRevertToInProgress">
                        Revert this candidate's application back to In progress
                    </button>
                </div>
            }
        }
        else
        {
        <div class="sfa-inset sfa-inset-yellow">
            <h2 class="heading-large sfa-medium-top-margin">Decision log</h2>

            @Html.FormTextAreaFor(m => m.Notes, hintText: "This is for reference and not shown to candidates", controlHtmlAttributes: new { @class = "form-control form-control-4-4", type = "text", rows=7 })

            <div class="form-group">
                <fieldset>
                    <legend class="heading-medium">How would you like to assign this candidate's application?</legend>

                    <label for="application-status-submitted" class="block-label selection-button-radio">
                        @Html.RadioButtonFor(model => model.Status, ApplicationStatuses.Submitted, new { id = "application-status-submitted" })
                        New @if (Model.Status == ApplicationStatuses.Submitted)
                        {
                            @Html.Raw(currentStatus)
                        }
                    </label>
                    <label for="application-status-inprogress" class="block-label selection-button-radio">
                        @Html.RadioButtonFor(model => model.Status, ApplicationStatuses.InProgress, new { id = "application-status-inprogress" })
                        In progress @if (Model.Status == ApplicationStatuses.InProgress)
                        {
                            @Html.Raw(currentStatus)
                        }
                    </label>
                    <label for="application-status-unsuccessful" class="block-label selection-button-radio">
                        @Html.RadioButtonFor(model => model.Status, ApplicationStatuses.Unsuccessful, new { id = "application-status-unsuccessful" })
                        Unsuccessful
                    </label>
                    <label for="application-status-successful" class="block-label selection-button-radio">
                        @Html.RadioButtonFor(model => model.Status, ApplicationStatuses.Successful, new { id = "application-status-successful" })
                        Successful
                    </label>
                </fieldset>
            </div>
            <div class="form-group inline">
                <button type="submit" class="button" name="Review" value="ReviewSaveAndContinue">Save and Continue</button>
                @Html.RouteLink("Cancel", RecruitmentRouteNames.VacancyApplications, new { Model.Vacancy.VacancyReferenceNumber }, new { @class = "button sfa-button-secondary" })
            </div>
        </div>
        }
        </div>
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/print")
}