@using SFA.Apprenticeships.Web.Recruit.Constants

@model SFA.Apprenticeships.Web.Raa.Common.ViewModels.Application.Apprenticeship.ApprenticeshipApplicationViewModel

@{
    ViewBag.Title = "Recruit an Apprentice - Send unsuccessful decision";
}

@using (Html.BeginRouteForm(RecruitmentRouteNames.ConfirmUnsuccessfulApprenticeshipApplication, FormMethod.Post, new { id = "confirm-unsuccessful-apprenticeship-application-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ApplicationSelection.ApplicationId)
    @Html.HiddenFor(m => m.ApplicationSelection.VacancyReferenceNumber)
    @Html.HiddenFor(m => m.ApplicationSelection.FilterType)
    @Html.HiddenFor(m => m.ApplicationSelection.PageSize)

    <div class="grid-row">
        <div class="column-two-thirds">
            <h1 class="heading-xlarge">Inform @Model.ApplicantDetails.Name of unsuccessful application</h1>

            <p> You are about to inform this candidate that they have not been selected for the role of @Model.Vacancy.Title</p>
            <label for="candidate-feedback" class="form-label-bold">What feedback would you like to share with the candidate?</label>
            @Html.FormTextAreaFor(m => m.UnSuccessfulReason, controlHtmlAttributes: new { @class = "form-control form-control-4-4", rows= 7, type = "text", autofocus = "autofocus", spellcheck = "true", id = "candidate-feedback" })
        </div>
    </div>
    <div class="form-group inline sfa-xlarge-top-margin">
        <button type="submit" class="button" name="SendUnsuccessfulDecision" value="SendUnsuccessfulDecision">Confirm and send</button>
        @Html.RouteLink("Cancel", RecruitmentRouteNames.ReviewApprenticeshipApplication, Model.ApplicationSelection.RouteValues, new { @class = "button sfa-button-secondary" })
    </div>
}
